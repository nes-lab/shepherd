---
- name: Setup tmpfs and shepherd recordings on external storage
  hosts: all
  vars:
    storage_dev: mmcblk0
  become: true
  tasks:

    - name: Confirm formatting external storage
      ansible.builtin.pause:
        prompt: 'This will format your external storage at /dev/{{ storage_dev }}. All data will be lost. Press Ctrl+c and then "a" to abort'

    - name: Check root device
      ansible.builtin.shell: |
        set -o pipefail # <- prevents surprises
        mount | grep ' / ' | cut -d' ' -f 1  # noqa command-instead-of-module
      register: root_dev
      changed_when: false
      # despite ansible-lints claim this is not doable with ansible.posix.mount

    - name: Fail if device is root device
      ansible.builtin.fail:
        msg: Cannot use root device as external storage!
      when: root_dev.stdout == "/dev/" + storage_dev + "p1"

    - name: Install parted
      ansible.builtin.apt:
        name: parted
        state: present

    - name: Read device information
      community.general.parted:
        device: '/dev/{{ storage_dev }}'
        unit: 'MiB'
      register: dev_info

    - name: Unmount external storage
      ansible.builtin.command: 'umount /dev/{{ storage_dev }}p1'
      failed_when: false
      changed_when: true

    - name: Remove all partitions from disk
      community.general.parted:
        device: '/dev/{{ storage_dev }}'
        number: '{{ item.num }}'
        state: absent
      with_items: '{{ dev_info.partitions }}'

    - name: Create a new primary partition
      community.general.parted:
        device: '/dev/{{ storage_dev }}'
        number: 1
        state: present

    - name: Unmount external storage
      ansible.builtin.command: 'umount /dev/{{ storage_dev }}p1'
      failed_when: false
      changed_when: true

    - name: Create a ext4 filesystem
      ansible.builtin.command: 'mkfs.ext4 -F /dev/{{ storage_dev }}p1'
      changed_when: true

    - name: Mount external storage at /var/shepherd/recordings
      ansible.posix.mount:
        path: '/var/shepherd/recordings'
        src: '/dev/{{ storage_dev }}p1'
        fstype: ext4
        opts: defaults
        state: mounted
        dump: '2'
        passno: '2'

    - name: Mount tmpfs at /tmp
      ansible.posix.mount:
        path: '/tmp'
        src: 'tmpfs'
        fstype: tmpfs
        opts: rw,nodev,nosuid,size=128M
        state: mounted
        dump: '0'
        passno: '0'
