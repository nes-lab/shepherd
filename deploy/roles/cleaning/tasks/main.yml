---

- name: Determine free space on main partition
  ansible.builtin.command: 'df -m /opt/ --output\=avail'
  register: pre_free_mb
  changed_when: false

- name: Find recordings
  ansible.builtin.find:
    paths: ["/var/shepherd/recordings/", "/var/shepherd/recordings2/"]
    patterns: '*'
    recurse: true
  register: files_rec
  when: cleaning_delete_recordings | bool
- name: Delete recordings
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ files_rec.files | map(attribute='path') }}"
  when: cleaning_delete_recordings | bool
  # NOTE: could be done with just .find, but this leaves directory intact

- name: Include removal of software
  ansible.builtin.include_tasks:
    file: software.yml
  when: cleaning_remove_software | bool

- name: Include removal of temp-data
  ansible.builtin.include_tasks:
    file: temp_data.yml

- name: Include zeroing free/empty disk-space
  ansible.builtin.include_tasks:
    file: zero_free_space.yml
  when: cleaning_zero_free_space | bool

- name: Determine free space on main partition
  ansible.builtin.command: 'df -m /opt/ --output\=avail'
  register: opt_free_mb
  changed_when: false

- name: Free space on main partition
  ansible.builtin.debug:
    msg:
      - "free = {{ opt_free_mb.stdout_lines[-1] }} MiB, "
      - "cleaned = {{ (opt_free_mb.stdout_lines[-1] | float) - (pre_free_mb.stdout_lines[-1] | float) }} MiB"
