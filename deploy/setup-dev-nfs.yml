---
# establish a local network file system `/opt/shepherd-dev` for the nodes to access

- name: Base setup
  hosts: all
  strategy: free # noqa: run-once[play]
  collections:
    - ansible.posix
  vars:
    mount_path: /opt/shepherd-dev
  tasks:

    - name: Get full path of repository
      ansible.builtin.command: "realpath {{ playbook_dir }}/.."
      delegate_to: localhost
      changed_when: false
      register: repo_dir

    - name: Fetch local facts
      ansible.builtin.setup:
      delegate_to: localhost
      register: local_facts

    - name: Confirm setting up of NFS share
      ansible.builtin.pause:
        prompt: 'Confirm that you really want to configure an NFS share on your local machine.
        This is a security risk! Press return to continue. Press Ctrl+c and then "a" to abort'

    - name: Install nfs server - pacman (requires openss-askpass)
      ansible.builtin.package:
        name: nfs-utils
        state: present
        use: pacman
      delegate_to: localhost
      become: true
      when: local_facts.ansible_facts.ansible_pkg_mgr == "pacman"

    - name: Install nfs server - apt (requires askpass)
      ansible.builtin.package:
        name: nfs-kernel-server
        state: present
        use: apt
      delegate_to: localhost
      become: true
      when: local_facts.ansible_facts.ansible_pkg_mgr == "apt"

    - name: Adding the path for nfs on localhost
      ansible.builtin.lineinfile:
        dest: "/etc/exports"
        line: "{{ repo_dir.stdout }}   *(rw,sync,no_subtree_check,all_squash,anonuid=1000,anongid=1000)"
        insertafter: "EOF"
        state: present
      delegate_to: localhost
      become: true

    - name: Start nfs on localhost
      ansible.builtin.systemd:
        name: "nfs-server.service"
        state: restarted
      delegate_to: localhost
      become: true

    - name: APT - Update Cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        name: "nfs-common"
        state: present
      become: true

    - name: Mount nfs share
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "{{ local_facts.ansible_facts.ansible_default_ipv4.address }}:{{ repo_dir.stdout }}"
        fstype: nfs
        opts: v3,auto,user,exec,_netdev
        state: mounted
      become: true
